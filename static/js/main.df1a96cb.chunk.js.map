{"version":3,"sources":["components/Header.js","components/Item.js","components/Main.js","components/Footer.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","className","class","href","React","Component","Item","props","state","isModalOpen","this","setState","modal","name","introduction","id","onClick","handleClickClose","handleClickItem","src","image","Main","alt","map","itemList","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yNAkBeA,E,uKAdX,OACE,yBAAKC,UAAU,UACX,yBAAKC,MAAM,QACT,wBAAIA,MAAM,aACV,wBAAIA,MAAM,aAAY,uBAAGC,KAAK,kBAAR,UACtB,wBAAID,MAAM,aAAY,uBAAIC,KAAK,kBAAT,UACtB,wBAAID,MAAM,aAAY,uBAAIC,KAAK,oBAAT,mB,GARbC,IAAMC,WCqDZC,E,kDAnDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAACC,aAAa,GAFV,E,8DAMjBC,KAAKC,SAAS,CAACF,aAAa,M,yCAI5BC,KAAKC,SAAS,CAACF,aAAa,M,+BAGpB,IACJG,EADG,OAuBP,OArBIF,KAAKF,MAAMC,cACbG,EACE,yBAAKX,UAAU,SACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,sBACb,4BAAKS,KAAKH,MAAMM,MAChB,2BAAIH,KAAKH,MAAMO,cACf,uBAAGX,KAAMO,KAAKH,MAAMQ,GAAId,UAAU,kBAAkBc,GAAG,SAAvD,gBAEF,4BACEd,UAAU,kBACVe,QAAS,kBAAM,EAAKC,qBAFtB,WAYN,yBAAKhB,UAAU,QACb,yBACEA,UAAU,OACVe,QAAS,WAAO,EAAKE,oBAErB,2BAAIR,KAAKH,MAAMM,MACf,yBAAKM,IAAKT,KAAKH,MAAMa,SAEtBR,O,GA9CUR,IAAMC,WC8DVgB,E,uKAjCX,OACE,yBAAKpB,UAAU,gBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,kBACb,uCACA,wBAAIc,GAAG,iBAAP,SACA,yBAAKI,IAAI,8EAA8EG,IAAI,iBAC3F,0IACkB,6BADlB,wGAC4C,6BAD5C,0LAEiC,6BAFjC,mKAEyE,6BAFzE,yMAGiC,6BAHjC,2MAKF,yBAAKrB,UAAU,kBACb,wBAAIc,GAAG,iBAAP,oBACA,yBAAKd,UAAU,SAzCN,CACf,CACEc,GAAG,wCACHF,KAAM,cACNO,MAAO,8EACPN,aAAc,0GAEhB,CACEC,GAAI,oCACJF,KAAM,YACNO,MAAO,6FACPN,aAAc,wFAEhB,CACEC,GAAI,wCACJF,KAAM,eACNO,MAAO,0FACPN,aAAc,gEAEhB,CACEC,GAAI,uCACJF,KAAM,cACNO,MAAO,6FACPN,aAAc,mFAmBAS,KAAI,SAACC,GACb,OACE,kBAAC,EAAD,CACET,GAAIS,EAAST,GACbF,KAAMW,EAASX,KACfO,MAAOI,EAASJ,MAChBN,aAAcU,EAASV,0B,GAlDtBV,IAAMC,WCaVoB,E,uKAZX,OACE,yBAAKV,GAAG,kBAAkBd,UAAU,UAClC,yBAAKA,UAAU,kBACb,4BACE,4BAAI,uBAAGE,KAAK,yCAAR,iB,GANKC,IAAMC,WCeZqB,E,uKAVX,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GANUtB,IAAMC,WCOJsB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.df1a96cb.chunk.js","sourcesContent":["import React from 'react';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <div className='header'>\n          <nav class=\"gnav\">\n            <ul class=\"gnav-list\">\n            <li class=\"gnav-item\"><a href=\"#about-section\">ABOUT</a></li>\n            <li class=\"gnav-item\"><a  href=\"#gemes-section\">GAMES</a></li>\n            <li class=\"gnav-item\"><a  href=\"#contact-section\">CONTACT</a></li>\n            </ul>\n          </nav>\n      </div>\n    );\n  }\n}\n\nexport default Header;","import React from 'react';\n\n\nclass Item extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {isModalOpen: false};\n  }\n\n  handleClickItem() {\n    this.setState({isModalOpen: true});\n  }\n\n  handleClickClose() {\n    this.setState({isModalOpen: false});\n  }\n\n  render() {\n    let modal;\n    if (this.state.isModalOpen) {\n      modal = (\n        <div className='modal'>\n          <div className='modal-inner'>\n            <div className='modal-header'></div>\n            <div className='modal-introduction'>\n              <h2>{this.props.name}</h2>\n              <p>{this.props.introduction}</p>\n              <a href={this.props.id} className=\"modal-start-btn\" id=\"start\">START！</a>\n              </div>\n            <button\n              className='modal-close-btn'\n              onClick={() => this.handleClickClose()}\n            >\n              ×\n            </button>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className='card'>\n        <div\n          className='item'\n          onClick={() => {this.handleClickItem()}}\n        >\n          <p>{this.props.name}</p>\n          <img src={this.props.image} />\n        </div>\n        {modal}\n      </div>\n    );\n  }\n}\n\nexport default Item;","import React from 'react';\nimport Item from './Item';\n\nclass Main extends React.Component {\n  render() {\n    const itemList = [\n      {\n        id:\"https://book22.github.io/button_game/\",\n        name: 'Button Game',\n        image: 'https://github.com/book22/Portfolio/blob/gh-pages/image/buttn_.png?raw=true',\n        introduction: '順番に数字を押していくゲームです。',\n      },\n      {\n        id: 'https://book22.github.io/QuizApp/',\n        name: 'Quiz Game',\n        image: 'https://github.com/book22/Portfolio/blob/gh-pages/image/animal_quiz_neko_maru.png?raw=true',\n        introduction: '三択問題のクイズゲームです。',\n      },\n      {\n        id: 'https://book22.github.io/SlotMachine/',\n        name: 'Slot Machine',\n        image: 'https://github.com/book22/Portfolio/blob/gh-pages/image/money_slot_machine.png?raw=true',\n        introduction: 'スロットゲームです。',\n      },\n      {\n        id: 'https://book22.github.io/TypingGame/',\n        name: 'Typing Game',\n        image: 'https://github.com/book22/Portfolio/blob/gh-pages/image/computer_typing_hayai.png?raw=true',\n        introduction: '単語を入力するゲームです。',\n      },\n    ];\n    \n    return (\n      <div className='main-wrapper'>\n        <div className='main'>\n          <div className='copy-container'>\n            <h1>Welcome</h1>\n            <h3 id=\"about-section\" >ABOUT</h3>\n            <img src=\"https://github.com/book22/Portfolio/blob/gh-pages/image/image.jpeg?raw=true\" alt=\"写真\" />\n            <p>\n            はじめまして。本條祐一朗と申します。<br/>平成12年生まれの20歳、大学3年生です。<br/>\n            エンジニアの経験としては長期インターンでweb制作に携わりました。<br/>現在は主にJavaScriptの理解を深めれるように、挑戦しています。<br/>\n            高校時代では野球部に入り、大阪ベスト４まで進出した経験があります。<br/>その体力を活かし、これからも技術を伸ばし続けれるように精進します！</p>\n          </div>\n          <div className='item-container'>\n            <h3 id=\"gemes-section\">JavaScript Games</h3>\n            <div className=\"cards\">\n            {itemList.map((itemList) => {\n              return (\n                <Item\n                  id={itemList.id}\n                  name={itemList.name}\n                  image={itemList.image}\n                  introduction={itemList.introduction}\n                />\n              );\n            })}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React from 'react';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <div id=\"contact-section\" className='footer'>\n        <div className='footer-contact'>\n          <ul>\n            <li><a href=\"mailto:info@bookking0122@yahoo.co.jp.\">Email</a></li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Footer;","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <Main />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}